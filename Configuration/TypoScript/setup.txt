plugin.tx_pxshopware {
    view {
        templateRootPaths {
            0 = {$plugin.tx_pxshopware.view.templateRootPath}
        }
        partialRootPaths {
            0 = {$plugin.tx_pxshopware.view.partialRootPath}
        }
        layoutRootPaths {
            0 = {$plugin.tx_pxshopware.view.layoutRootPath}
        }
    }

    persistence {
    }

    settings {
        # api configuration
        api {
            url = {$plugin.tx_pxshopware.settings.api.url}
            username = {$plugin.tx_pxshopware.settings.api.username}
            key = {$plugin.tx_pxshopware.settings.api.key}
            # this value will be used if no config.locale_all was set (not used for now! @see: https://issues.shopware.com/#/issues/SW-15388)
            locale_all = de_DE

            # language to shop mapping configuration for localization of resources
            languageToShopware {
                0 {
                    shop_id = 1
                    parentCategory =
                    sys_language_uid = 0
                }
                1 {
                    shop_id = 2
                    parentCategory =
                    sys_language_uid = 1
                }
                # ...
            }
        }
        # override global cache lifetime which is configured in extension configuration
        # the duration after which the item is updated via REST-API
        caching {
#            disable = 0
            lifetime = {$plugin.tx_pxshopware.settings.cacheLifeTime}
        }
        # fallback image if no image was given for article or other item
        noImage {
            path = {$plugin.tx_pxshopware.settings.noImage.path}
            filename = {$plugin.tx_pxshopware.settings.noImage.filename}
        }

        #
        # only for internal use -> do not override it!
        #
        urls {
            portrino_website = http://www.portrino.de
            typo3_documentation = https://docs.typo3.org/typo3cms/extensions/px_shopware/
            shopware_store = https://store.shopware.com/port116496663052/typo3-connector.html
        }
        emails {
            portrino_support = support@portrino.de
        }
        template = default
    }
}

plugin.tx_pxshopware_pi1 = USER
plugin.tx_pxshopware_pi1 {
    userFunc = TYPO3\CMS\Extbase\Core\Bootstrap->run
    pluginName = Pi1
    vendorName = Portrino
    extensionName = PxShopware
    controller = Article
    action = list
    settings < plugin.tx_pxshopware.settings
    persistence < plugin.tx_pxshopware.persistence
    view < plugin.tx_pxshopware.view
}

plugin.tx_pxshopware_pi2 < plugin.tx_pxshopware_pi1
plugin.tx_pxshopware_pi2 {
    pluginName = Pi2
    controller = Category
}

module.tx_pxshopware < plugin.tx_pxshopware

tx_pxshopware_notification_page = PAGE
tx_pxshopware_notification_page {
    typeNum = 1471426941
    config {
        disableAllHeaderCode = 1
        disablePrefixComment = 1
        admPanel = 0
        debug = 0
        metaCharset = utf-8
        additionalHeaders = Content-type:application/json
    }

    10 = USER
    10 {
        userFunc = TYPO3\CMS\Extbase\Core\Bootstrap->run

        vendorName = Portrino
        extensionName = PxShopware
        pluginName = Notification
        controller = Notification
        action = index
    }
}

# add article and category indexing if ext:solr is loaded
[userFunc = \TYPO3\CMS\Core\Utility\ExtensionManagementUtility::isLoaded(solr)]
    plugin.tx_solr {
        index {
            queue {
                Portrino_PxShopware_Domain_Model_Article = 1
                Portrino_PxShopware_Domain_Model_Article {
                    external = 1
                    initialization = Portrino\PxShopware\Service\Solr\IndexQueue\Initializer\ArticleInitializer
                    indexer = Portrino\PxShopware\Service\Solr\Indexer\ArticleIndexer
                    indexer {
                    }
                    fields {
                        changed = changed
                        descriptionLong_textS = descriptionLong
                        url = pxShopwareUrl
                        price_tdoubleS = price
                        pseudoPrice_tdoubleS = pseudoPrice
                        tax_doubleS = tax
                        taxName_stringS = taxName
                        unitId_stringS = unitId
                        packUnit_stringS = packUnit
                        purchaseUnit_tdoubleS = purchaseUnit
                        referenceUnit_tdoubleS = referenceUnit
                        productNumber_textS = number
                        ean_textS = ean
                        additionalText_textS = additionalTextcategory
                        supplier_textS = supplier
                        category_textM = SOLR_MULTIVALUE
                        category_textM {
                            # disable here, is added in ArticleIndexer->overwriteSpecialFields
                            #field = categories
                            separator = ,
                            removeEmptyValues = 1
                        }
                        details_textM = SOLR_MULTIVALUE
                        details_textM {
                            # disable here, is added in ArticleIndexer->overwriteSpecialFields
                            #field = details
                            separator = ,
                            removeEmptyValues = 1
                        }

                        keywords = SOLR_MULTIVALUE
                        keywords {
                            field = keywords
                            separator = ,
                            removeEmptyValues = 1
                        }
                    }
                }

                    # deactivate for now
                Portrino_PxShopware_Domain_Model_Category = 0
                Portrino_PxShopware_Domain_Model_Category {
                    initialization = Portrino\PxShopware\Service\Solr\IndexQueue\Initializer\CategoryInitializer
                    indexer = Portrino\PxShopware\Service\Solr\Indexer\CategoryIndexer
                    indexer {
                        ignoredIds = 1,3,4,51
                    }
                    fields {
                        url = pxShopwareUrl
                    }
                }
            }
        }
        search.trustedFields := addToList(description, descriptionLong_textS)
    }
[global]